# arm-linux makefile

TARGET		:=	$(notdir $(CURDIR))
BUILD		:=	build
SOURCES		:=	source/common source/linux-test source/common/inih
INCLUDES	:=	include source/common/inih

CFLAGS	:=	-Wall -Wno-unused \
			-fomit-frame-pointer -ffast-math \
			$(ARCH)

OUTPUT	:=	$(CURDIR)/$(TARGET)
TOPDIR	:=	$(CURDIR)

DEPSDIR	:=	$(CURDIR)/$(BUILD)
VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir)) \
			$(foreach dir,$(DATA),$(CURDIR)/$(dir))

CFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.c)))
CPPFILES:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.cpp)))
SFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.s)))
OFILES	:=	$(addsuffix .o,$(BINFILES)) \
			$(CPPFILES:.cpp=.o) $(CFILES:.c=.o) $(SFILES:.s=.o)
INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)/$(dir)) \
			$(foreach dir,$(LIBDIRS),-I$(dir)/include) \
			-I$(CURDIR)/$(BUILD)

CFLAGS	+=	$(INCLUDE)
ASFLAGS	:=	-g $(ARCH)
LIBS	:=	-lm -lminizip -lz -lSDL2

all: slowdebug
release:	CFLAGS += -O3 -DDEBUGLEVEL=0
testing:	CFLAGS += -O3 -DDEBUGLEVEL=1
debug:		CFLAGS += -g -O0 -DDEBUGLEVEL=2
slowdebug:	CFLAGS += -g -O0 -DDEBUGLEVEL=3

CXXFLAGS	:= $(CFLAGS) -fno-rtti -fno-exceptions -std=gnu++11 -g

release testing debug slowdebug: $(BUILD) $(OUTPUT).elf

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $(DEPSDIR)/$@

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $(DEPSDIR)/$@

%.o: %.s
	$(CC) $(CFLAGS) -c $< -o $(DEPSDIR)/$@

$(BUILD):
	@[ -d $@ ] || mkdir -p $@

$(OUTPUT).elf: $(OFILES)
	$(CC) $(CFLAGS) -o $@ $(BUILD)/*.o $(LIBS)

clean:
	@rm -rf build $(OUTPUT).elf
