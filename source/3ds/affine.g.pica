.gsh point c0

; three uv offsets (u0,v0,u1,v1),(u2,v2,fac2u,fac2v)
.fvec bgmap_offsets[2]

; base required z and w
.constf myconst(0.0, 0.0, -1.0, 1.0)

; v0: (left,top,right,bottom) pos
; v1: (u,v,u,v) texcoord origin
; v2: (ix,iy,jx,jy) texcoord basis

.out outpos position
.out outtc0 texcoord0
.out outtc1 texcoord1
.out outtc2 texcoord2

.entry gmain_affine
.proc gmain_affine
    ; r0: position
    ; r1: texcoord intermediate
    ; r2: texcoord final
    ; r3: tecoord shifted

    ; top left
    setemit 0
    mov r0, myconst
    mov r0.xy, v0.xy
    mov outpos, r0

    add r3, bgmap_offsets[0], v1
    mov outtc0.xy, r3.xy
    mov outtc1.xy, r3.zw
    add r3.xy, bgmap_offsets[1].xy, v1.xy
    mul outtc2.xy, bgmap_offsets[1].zw, r3.xy
    emit

    ; top right
    setemit 1
    mov r0.x, v0.z
    mov outpos, r0
    ; add i to texcoord origin
    mov r1, v1
    add r2.xyzw, r1.xyzw, v2.xyxy

    add r3, bgmap_offsets[0], r2
    mov outtc0.xy, r3.xy
    mov outtc1.xy, r3.zw
    add r3.xy, bgmap_offsets[1].xy, r2.xy
    mul outtc2.xy, bgmap_offsets[1].zw, r3.xy
    emit

    ; bottom left
    setemit 2, prim
    mov r0.xy, v0.xw
    mov outpos, r0
    ; add j to texcoord origin
    add r1.xyzw, r1.xyzw, v2.zwzw

    add r3, bgmap_offsets[0], r1
    mov outtc0.xy, r3.xy
    mov outtc1.xy, r3.zw
    add r3.xy, bgmap_offsets[1].xy, r1.xy
    mul outtc2.xy, bgmap_offsets[1].zw, r3.xy
    emit

    ; bottom left
    setemit 0, prim inv
    mov r0.x, v0.z
    mov outpos, r0
    ; add i to previous texcoord
    add r2.xyzw, r1.xyzw, v2.xyxy

    add r3, bgmap_offsets[0], r2
    mov outtc0.xy, r3.xy
    mov outtc1.xy, r3.zw
    add r3.xy, bgmap_offsets[1].xy, r2.xy
    mul outtc2.xy, bgmap_offsets[1].zw, r3.xy
    emit

    end
.end
