.gsh point c0

.fvec shading_offset

.constf const1(0.5, 0, -1, 1)
.constf rad255(0.00392156862745, 0.00392156862745, 0.00392156862745, 1)

; for final screen output
; texcoord 0 (vip) is mirrored diagonally for 3ds screen
; texcoord 1 (softbuf) is not mirrored
; texcoord 2 (column table) is the input texcoord but only the bottom
; v0: top left pos / bottom right pos
; v1: top left texcoord / bottom right texcoord
; v2: vertex colour

.out outpos position
.out viptc texcoord0
.out softtc texcoord1
.out coltc texcoord2
.out vcol color

.entry gmain_final
.proc gmain_final
    ; z=-1 and w=1 are necessary for position output
    mov r0, const1
    mul r4, rad255, v2
    ; top left
    setemit 0
    mov r0.xy, v0.xy
    mov outpos, r0
    mov viptc, v1
    mov r2.x, v1.y
    mov r2.y, v1.x
    mov softtc, r2
    ; texcoord shading: bottom left (v1.x, 0)
    mov r3, const1
    mad r1.x, r3.x, v1.x, shading_offset.x
    mov r1.y, const1.w
    mov coltc, r1
    mov vcol, r4
    emit

    ; bottom left
    setemit 1
    ; texcoord shading: reuse previous
    mov coltc, r1
    ; texcoord vip: (v1.x, v3.y)
    mov r1, v1
    mov r1.y, v1.w
    mov viptc, r1
    ; texcoord softbuf: v3.x, v1.y
    mov r2.x, v1.w
    mov r2.y, v1.x
    mov softtc, r2
    ; position: v2.x, v0.y (really top right)
    mov r0.x, v0.z
    mov r0.y, v0.y
    mov outpos, r0
    mov vcol, r4
    emit

    ; top right
    setemit 2, prim
    ; position: v0.x, v2.y (really bottom left)
    mov r0.y, v0.w
    mov r0.x, v0.x
    mov outpos, r0
    ; texcoord vip: v3.x, v1.y
    mov r1.x, v1.z
    mov r1.y, v1.y
    mov viptc, r1
    ; texcoord softbuf: v1.x, v3.y
    mov r2.x, v1.y
    mov r2.y, v1.z
    mov softtc, r2
    ; texcoord shading: (v3.x, 0)
    mov r2, const1
    mad r1.x, r1.x, r2.x, shading_offset.x
    mov r1.y, const1.w
    mov coltc, r1
    mov vcol, r4
    emit

    ; bottom right
    setemit 0, prim inv
    mov r0.x, v0.z
    mov r0.y, v0.w
    mov outpos, r0
    mov r0.xy, v1.zw
    mov viptc, r0
    mov r0.x, v1.w
    mov r0.y, v1.z
    mov softtc, r0
    ; texcoord shading: reuse previous
    mov coltc, r1
    mov vcol, r4
    emit

    end
.end
